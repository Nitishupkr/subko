<meta name="viewport" content="width=device-width, initial-scale=1">
<head>
  <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400;700&display=swap" rel="stylesheet">
</head>

<style>
/* Base styles */
.calendar {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  gap: 10px;
  max-width: 1400px;
  margin: 20px auto;
  background-color: #ffffff;
  padding: 20px;
  font-family: 'IBM Plex Sans', sans-serif;
}

.calendar .day-names {
  display: contents;
}

.calendar .day-name {
  text-align: center;
  font-weight: bold;
  padding: 8px 0;
  font-family: dashiell-bright, serif;
}

.calendar .day {
  border: 1px solid #ccc;
  height: 100px;
  position: relative;
  cursor: pointer;
}

.calendar .day .event {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 5px;
  box-sizing: border-box;
  color: white;
}

.green { background-color: #55AF7C; color: #3c763d; }
.red { background-color: #E08889; color: #a94442; }
.blue { background-color: #789DBF; color: #31708f; }

.event .time {
  font-size: 12px;
}

.event .title {
  font-size: 14px;
  font-weight: bold;
}

.event .logo {
  align-self: flex-end; /* Align logo to the bottom right corner */
  width: 20px; /* Adjust size as needed */
  height: 20px; /* Adjust size as needed */
  margin-bottom: 5px; /* Add some margin to avoid touching the bottom */
}

/* Popup styles */
.popup {
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: white;
  padding: 20px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  max-width: 600px;
  width: 90%;
  max-height: 80%;
  overflow-y: auto;
  border-radius: 10px;
}

.popup.active {
  display: block;
}

.popup .close-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  cursor: pointer;
  font-size: 24px;
}

.overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 999;
}

.overlay.active {
  display: block;
}

/* Media queries for responsiveness */
@media only screen and (max-width: 768px) {
  .calendar {
    grid-template-columns: repeat(3, 1fr);
    gap: 5px;
  }

  .calendar .day {
    height: 80px;
  }

  .popup {
    max-width: 90%;
    width: 280px;
  }
}
</style>

<div class="calendar">
  <!-- Day names row -->
  <div class="day-names">
    <div class="day-name">Monday</div>
    <div class="day-name">Tuesday</div>
    <div class="day-name">Wednesday</div>
    <div class="day-name">Thursday</div>
    <div class="day-name">Friday</div>
    <div class="day-name">Saturday</div>
    <div class="day-name">Sunday</div>
  </div>
  <!-- Calendar dates -->
  {% for day in (1..30) %}
    {% assign date = '2024-06-' | append: day | date: "%Y-%m-%d" %}
    <div class="day" data-date="{{ date }}">
      <div>{{ day }}</div>
    </div>
  {% endfor %}
</div>

<div class="overlay"></div>
<div class="popup">
  <span class="close-btn">&times;</span>
  <div class="popup-content"></div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const events = {
      {% for block in section.blocks %}
        '{{ block.settings.event_date }}': {
          time: '{{ block.settings.event_time }}',
          title: '{{ block.settings.event_title }}',
          heading: '{{ block.settings.event_heading }}',
          description: '{{ block.settings.event_description }}',
          image: '{{ block.settings.event_image | img_url: "master" }}',
          color: '{{ block.settings.event_color }}',
          logo: '{{ block.settings.event_logo | img_url: "thumb" }}'
        },
      {% endfor %}
    };

    // Populate events in the calendar
    Object.keys(events).forEach(date => {
      const event = events[date];
      const dayElement = document.querySelector(`.day[data-date="${date}"]`);
      if (dayElement) {
        const eventElement = document.createElement('div');
        eventElement.className = `event ${event.color}`;
        eventElement.dataset.event = date;
        eventElement.innerHTML = `
          <div class="time">${event.time}</div>
          <div class="title">${event.heading}</div>
          <img src="${event.logo}" alt="logo" class="logo" />
        `;
        dayElement.appendChild(eventElement);
      }
    });

    const overlay = document.querySelector('.overlay');
    const popup = document.querySelector('.popup');
    const popupContent = document.querySelector('.popup-content');
    const closeBtn = document.querySelector('.close-btn');

    document.querySelectorAll('.event').forEach(eventEl => {
      eventEl.addEventListener('click', function() {
        const date = this.dataset.event;
        const event = events[date];
        popupContent.innerHTML = `
          <h2>${event.heading}</h2>
          <img src="${event.image}" alt="${event.title}" style="width: 100%; height: auto;" />
          <p><strong>${event.time}</strong></p>
          <p>${event.description}</p>
          <button class="shop-btn">Shop Now</button>
        `;
        overlay.classList.add('active');
        popup.classList.add('active');
      });
    });

    closeBtn.addEventListener('click', function() {
      overlay.classList.remove('active');
      popup.classList.remove('active');
    });

    overlay.addEventListener('click', function() {
      overlay.classList.remove('active');
      popup.classList.remove('active');
    });
  });
</script>

{% schema %}
{
  "name": "Calendar Section",
  "settings": [],
  "blocks": [
    {
      "type": "event",
      "name": "Event",
      "settings": [
        {
          "type": "text",
          "id": "event_date",
          "label": "Event Date",
          "info": "Format: YYYY-MM-DD"
        },
        {
          "type": "text",
          "id": "event_time",
          "label": "Event Time"
        },
        {
          "type": "text",
          "id": "event_title",
          "label": "Event Title"
        },
        {
          "type": "text",
          "id": "event_heading",
          "label": "Event Heading"
        },
        {
          "type": "textarea",
          "id": "event_description",
          "label": "Event Description"
        },
        {
          "type": "image_picker",
          "id": "event_image",
          "label": "Event Image"
        },
        {
          "type": "select",
          "id": "event_color",
          "label": "Event Color",
          "options": [
            {
              "label": "Green",
              "value": "green"
            },
            {
              "label": "Red",
              "value": "red"
            },
            {
              "label": "Blue",
              "value": "blue"
            }
          ]
        },
        {
          "type": "image_picker",
          "id": "event_logo",
          "label": "Event Logo"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Calendar"
    }
  ]
}
{% endschema %}
